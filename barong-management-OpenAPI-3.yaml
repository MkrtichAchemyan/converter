openapi: 3.0.1
info:
  title: Barong
  description: Management API for barong OAuth server
  version: 2.0.30-alpha
servers:
- url: //localhost:3000/api/v2/management
tags:
- name: labels
  description: Operations about labels
- name: users
  description: Operations about users
- name: timestamp
  description: Operations about timestamps
paths:
  /labels/delete:
    post:
      tags:
      - labels
      description: Delete a label with 'private' scope
      operationId: postLabelsDelete
      requestBody:
        content:
          application/json:
            schema:
              required:
              - key
              - user_uid
              properties:
                user_uid:
                  type: string
                  description: User uid
                key:
                  type: string
                  description: Label key.
        required: true
      responses:
        201:
          description: Delete a label with 'private' scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
  /labels:
    put:
      tags:
      - labels
      description: Update a label with 'private' scope
      operationId: putLabels
      requestBody:
        content:
          application/json:
            schema:
              required:
              - key
              - user_uid
              - value
              properties:
                user_uid:
                  type: string
                  description: User uid
                key:
                  type: string
                  description: Label key.
                value:
                  type: string
                  description: Label value.
        required: true
      responses:
        200:
          description: Update a label with 'private' scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
    post:
      tags:
      - labels
      description: Create a label with 'private' scope and assigns to users
      operationId: postLabels
      requestBody:
        content:
          application/json:
            schema:
              required:
              - key
              - user_uid
              - value
              properties:
                user_uid:
                  type: string
                  description: User uid
                key:
                  type: string
                  description: Label key.
                value:
                  type: string
                  description: Label value.
        required: true
      responses:
        201:
          description: Create a label with 'private' scope and assigns to users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
  /labels/list:
    post:
      tags:
      - labels
      description: Get all labels assigned to users
      operationId: postLabelsList
      requestBody:
        content:
          application/json:
            schema:
              required:
              - user_uid
              properties:
                user_uid:
                  type: string
                  description: User uid
        required: true
      responses:
        201:
          description: Get all labels assigned to users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
  /labels/filter/users:
    post:
      tags:
      - labels
      description: Get all labels assigned to users
      operationId: postLabelsFilterUsers
      requestBody:
        content:
          application/json:
            schema:
              required:
              - key
              properties:
                key:
                  type: string
                  description: Label key.
                value:
                  type: string
                  description: Label value
                scope:
                  type: string
                  description: Label scope.
                extended:
                  type: boolean
                  description: When true endpoint returns full information about users
                range:
                  type: string
                  description: ""
                from:
                  type: integer
                  description: An integer represents the seconds elapsed since Unix
                    epoch.If set, only labels FROM the time will be retrieved.
                  format: int32
                to:
                  type: integer
                  description: An integer represents the seconds elapsed since Unix
                    epoch.If set, only labels BEFORE the time will be retrieved.
                  format: int32
                page:
                  type: integer
                  description: Page number (defaults to 1).
                  format: int32
                limit:
                  type: integer
                  description: Number of users per page (defaults to 100, maximum
                    is 1000).
                  format: int32
        required: true
      responses:
        201:
          description: Get all labels assigned to users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
  /users/import:
    post:
      tags:
      - users
      description: Imports an existing user
      operationId: postUsersImport
      requestBody:
        content:
          application/json:
            schema:
              required:
              - email
              - password_digest
              properties:
                email:
                  type: string
                  description: User Email
                password_digest:
                  type: string
                  description: User Password Hash
                phone:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                dob:
                  type: string
                  description: Birthday date
                  format: date
                address:
                  type: string
                postcode:
                  type: string
                city:
                  type: string
                country:
                  type: string
        required: true
      responses:
        201:
          description: Imports an existing user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithProfile'
  /users:
    post:
      tags:
      - users
      description: Creates new user
      operationId: postUsers
      requestBody:
        content:
          application/json:
            schema:
              required:
              - email
              - password
              properties:
                email:
                  type: string
                  description: User Email
                password:
                  type: string
                  description: User Password
        required: true
      responses:
        201:
          description: Creates new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithProfile'
  /users/list:
    post:
      tags:
      - users
      description: Returns array of users as collection
      operationId: postUsersList
      requestBody:
        content:
          application/json:
            schema:
              properties:
                extended:
                  type: boolean
                  description: When true endpoint returns full information about users
                range:
                  type: string
                  description: ""
                from:
                  type: integer
                  description: An integer represents the seconds elapsed since Unix
                    epoch.If set, only users FROM the time will be retrieved.
                  format: int32
                to:
                  type: integer
                  description: An integer represents the seconds elapsed since Unix
                    epoch.If set, only users BEFORE the time will be retrieved.
                  format: int32
                page:
                  type: integer
                  description: Page number (defaults to 1).
                  format: int32
                limit:
                  type: integer
                  description: Number of users per page (defaults to 100, maximum
                    is 1000).
                  format: int32
      responses:
        201:
          description: Returns array of users as collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/get:
    post:
      tags:
      - users
      description: Get users and profile information
      operationId: postUsersGet
      requestBody:
        content:
          application/json:
            schema:
              required:
              - uid
              properties:
                uid:
                  type: string
                  description: User uid
        required: true
      responses:
        201:
          description: Get users and profile information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithProfile'
  /otp/sign:
    post:
      tags:
      - otp
      description: Sign request with barong signature
      operationId: postOtpSign
      requestBody:
        content:
          application/json:
            schema:
              required:
              - otp_code
              - user_uid
              properties:
                user_uid:
                  type: string
                  description: Account UID
                otp_code:
                  type: string
                  description: Code from Google Authenticator
        required: true
      responses:
        201:
          description: Sign request with barong signature
          content: {}
  /documents:
    post:
      tags:
      - documents
      description: Push documents to barong DB
      operationId: postDocuments
      requestBody:
        content:
          application/json:
            schema:
              required:
              - doc_number
              - doc_type
              - file_ext
              - filename
              - uid
              - upload
              properties:
                uid:
                  type: string
                  description: User uid
                doc_type:
                  type: string
                  description: Document type
                doc_number:
                  type: string
                  description: Document number
                filename:
                  type: string
                  description: Document name
                file_ext:
                  type: string
                  description: Document file extension
                upload:
                  type: string
                  description: Base64 encoded document
                doc_expire:
                  description: Document expiration date
                update_labels:
                  type: boolean
                  description: If set to false, user label will not be created/updated
                metadata:
                  type: string
                  description: 'Any additional key: value pairs in json string format'
        required: true
      responses:
        201:
          description: Push documents to barong DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithProfile'
  /timestamp:
    post:
      tags:
      - timestamp
      description: Returns server time in seconds since Unix epoch.
      operationId: postTimestamp
      responses:
        201:
          description: Returns server time in seconds since Unix epoch.
          content: {}
components:
  schemas:
    Label:
      type: object
      properties:
        key:
          type: string
          description: Label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.
        value:
          type: string
          description: Label value. [A-Za-z0-9_-] should be used. Min - 3, max - 255
            characters.
        scope:
          type: string
          description: 'Label scope: ''public'' or ''private'''
        created_at:
          type: string
        updated_at:
          type: string
      description: Get all labels assigned to users
    UserWithProfile:
      type: object
      properties:
        email:
          type: string
        uid:
          type: string
        role:
          type: string
        level:
          type: integer
          format: int32
        otp:
          type: boolean
          description: is 2FA enabled for account
        state:
          type: string
        profile:
          $ref: '#/components/schemas/Profile'
        created_at:
          type: string
        updated_at:
          type: string
      description: Get users and profile information
    Profile:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
          description: Birthday date
          format: date
        address:
          type: string
        postcode:
          type: string
        city:
          type: string
        country:
          type: string
        metadata:
          type: object
          properties: {}
          description: Profile additional fields
    APIKey:
      type: object
      properties:
        kid:
          type: string
          description: jwt public key
        algorithm:
          type: string
          description: cryptographic hash function type
        scope:
          type: string
          description: serialized array of scopes
        state:
          type: string
          description: active/non-active state of key
        secret:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    User:
      type: object
      properties:
        email:
          type: string
        uid:
          type: string
        role:
          type: string
        level:
          type: integer
          format: int32
        otp:
          type: boolean
          description: is 2FA enabled for account
        state:
          type: string
    UserWithFullInfo:
      type: object
      properties:
        email:
          type: string
        uid:
          type: string
        role:
          type: string
        level:
          type: integer
          format: int32
        otp:
          type: boolean
        state:
          type: string
        profile:
          $ref: '#/components/schemas/Profile'
        labels:
          $ref: '#/components/schemas/Label'
        phones:
          $ref: '#/components/schemas/Phone'
        documents:
          $ref: '#/components/schemas/Document'
        created_at:
          type: string
        updated_at:
          type: string
    UserWithKYC:
      type: object
      properties:
        email:
          type: string
        uid:
          type: string
        role:
          type: string
        level:
          type: integer
          format: int32
        otp:
          type: boolean
        state:
          type: string
        data:
          type: string
          description: additional phone and profile info
        profile:
          $ref: '#/components/schemas/Profile'
        labels:
          $ref: '#/components/schemas/Label'
        phones:
          $ref: '#/components/schemas/Phone'
        documents:
          $ref: '#/components/schemas/Document'
        referral_uid:
          type: string
          description: UID of referrer
        created_at:
          type: string
        updated_at:
          type: string
    Phone:
      type: object
      properties:
        country:
          type: string
        number:
          type: string
    Document:
      type: object
      properties:
        upload:
          type: string
          description: file url
        doc_type:
          type: string
          description: 'document type: passport, driver license'
        doc_number:
          type: string
          description: 'document number: AB123123 type'
        doc_expire:
          type: string
          description: expire date of uploaded documents
        metadata:
          type: string
          description: any additional stored data
        created_at:
          type: string
        updated_at:
          type: string
